{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bindu\\\\OneDrive\\\\Desktop\\\\FSDproject\\\\FSD2_Group24\\\\fsd2-group24\\\\src\\\\components\\\\FormLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useForm from './useForm';\nimport Validate from './Validateinfo';\nimport './Form2.js';\nimport { Link } from \"react-router-dom\"; //import APIService from '../APIService'\n\nimport { Cookies, useCookies } from 'react-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport Button2 from './Button2.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormLogin(_ref) {\n  _s();\n\n  let {\n    submitform\n  } = _ref;\n  const {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  } = useForm(submitform, Validate);\n  const {\n    username,\n    email,\n    password,\n    password2\n  } = values;\n  const [token, setToken, removeToken] = useCookies(['mytoken']);\n  const [isLogin, setLogin] = useState(true);\n  let history = useHistory();\n  useEffect(() => {\n    if (token['mytoken'] != \"undefined\") {\n      if (token['mytoken']) {\n        history.push('/');\n        document.getElementById(\"btn2\").innerHTML = username;\n      }\n    } else {// alert(\"Enter correct username or password!!\");\n    }\n  }, [token]);\n\n  const loginBtn = () => {\n    APIService.LoginUser({\n      username,\n      password\n    }).then(resp => setToken('mytoken', resp.token)).catch(error => console.log(error));\n\n    if (token['mytoken'] == \"undefined\") {\n      alert(\"Invalid username or password!\");\n    }\n    /* else {\r\n         //document.getElementById('btn2').innerHTML = username;\r\n         // document.getElementById('btn3').innerHTML = \"Log Out\";\r\n     } */\n\n  }; // const logOut = () => {\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form2-content-right\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formlogin\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form2-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          className: \"form2-label\",\n          children: \"Username or email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          name: \"username\",\n          className: \"form2-input\",\n          placeholder: \"Enter your username or email address\",\n          value: values.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form2-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form2-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          className: \"form2-input\",\n          placeholder: \"Enter your password\",\n          value: values.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form2-input-btn\",\n        type: \"login\",\n        onClick: loginBtn,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), isLogin ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form2-input-Signup\",\n        children: [\"New to StartUp Club? Create an account to explore right away! \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/sign-up\",\n          onClick: () => setLogin(false),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 28\n      }, this) : setLogin(true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormLogin, \"HR3MNP75IpYuudgXgKifl0OF6Y8=\", true, function () {\n  return [useForm, useCookies];\n});\n\n_c = FormLogin;\nexport default FormLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormLogin\");","map":{"version":3,"sources":["C:/Users/Bindu/OneDrive/Desktop/FSDproject/FSD2_Group24/fsd2-group24/src/components/FormLogin.js"],"names":["React","useState","useEffect","useForm","Validate","Link","Cookies","useCookies","useNavigate","Button2","FormLogin","submitform","handleChange","values","handleSubmit","errors","username","email","password","password2","token","setToken","removeToken","isLogin","setLogin","history","useHistory","push","document","getElementById","innerHTML","loginBtn","APIService","LoginUser","then","resp","catch","error","console","log","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport useForm from './useForm'\r\nimport Validate from './Validateinfo'\r\nimport './Form2.js'\r\nimport { Link } from \"react-router-dom\"\r\n//import APIService from '../APIService'\r\nimport { Cookies, useCookies } from 'react-cookie'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Button2 from './Button2.js'\r\nfunction FormLogin({ submitform }) {\r\n    const { handleChange, values, handleSubmit, errors } = useForm(submitform, Validate);\r\n    const { username, email, password, password2} = values;\r\n    const [token, setToken, removeToken] = useCookies(['mytoken']);\r\n    const [isLogin, setLogin] = useState(true);\r\n    let history = useHistory()\r\n    useEffect(() => {\r\n        if (token['mytoken'] != \"undefined\") {\r\n            if (token['mytoken']) {\r\n                history.push('/');\r\n                document.getElementById(\"btn2\").innerHTML = username;\r\n            }\r\n        }\r\n        else {\r\n\r\n            // alert(\"Enter correct username or password!!\");\r\n        }\r\n    }, [token])\r\n    const loginBtn = () => {\r\n        APIService.LoginUser({ username, password })\r\n            .then(resp => setToken('mytoken', resp.token))\r\n            .catch(error => console.log(error))\r\n         if (token['mytoken'] == \"undefined\") {\r\n              alert(\"Invalid username or password!\");\r\n        }\r\n       /* else {\r\n            //document.getElementById('btn2').innerHTML = username;\r\n            // document.getElementById('btn3').innerHTML = \"Log Out\";\r\n        } */\r\n    }\r\n    // const logOut = () => {\r\n    // }\r\n    return (\r\n        <div className=\"form2-content-right\">\r\n            <form className=\"formlogin\" onSubmit={handleSubmit}>\r\n                <h1>\r\n                    Log In\r\n                </h1>\r\n                <div className=\"form2-inputs\">\r\n                    <label htmlFor=\"username\" className=\"form2-label\">\r\n                        Username or email\r\n                    </label>\r\n                    <input id=\"username\"\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        className=\"form2-input\"\r\n                        placeholder=\"Enter your username or email address\"\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                    />{errors.username && <p>{errors.username}</p>}\r\n                </div>\r\n\r\n                <div className=\"form2-inputs\">\r\n                    <label htmlFor=\"password\" className=\"form2-label\">\r\n                        Password\r\n                    </label>\r\n                    <input id=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        className=\"form2-input\"\r\n                        placeholder=\"Enter your password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                    />{errors.password && <p>{errors.password}</p>}\r\n                </div>\r\n\r\n                <button className=\"form2-input-btn\" type=\"login\" onClick={loginBtn}>Log In</button>\r\n                {isLogin ? <span className=\"form2-input-Signup\">\r\n                    New to StartUp Club? Create an account to explore right away! <Link to=\"/sign-up\" onClick={() => setLogin(false)}>Sign Up</Link>\r\n                </span> : setLogin(true)}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default FormLogin"]},"metadata":{},"sourceType":"module"}
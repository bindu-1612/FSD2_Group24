{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bindu\\\\OneDrive\\\\Desktop\\\\FSDproject\\\\FSD2_Group24\\\\fsd2-group24\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport './Todo.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  }; // updating data in json and displaying\n\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    axios.put('http://localhost:5000/todos/' + todoId, {\n      \"id\": todoId,\n      \"text\": newValue.text\n    }).then(res => {\n      console.log(newValue.text);\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(newValue);\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  }; //To delete data from json file\n\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n    axios.delete(\"http://localhost:5000/todos/\" + id).then(res => {\n      console.log(\"Bucket list deleted!!\");\n      alert(\"Bucket list Deleted!!\");\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }; //Reading json data\n\n\n  useEffect(() => {\n    fetch('http://localhost:5000/todos').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setTodos(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h1-todo\",\n      children: \"What's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Bindu/OneDrive/Desktop/FSDproject/FSD2_Group24/fsd2-group24/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","axios","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","updateTodo","todoId","newValue","put","then","res","catch","err","prev","map","item","id","removeTodo","removedArr","filter","delete","alert","error","completeTodo","updatedTodos","isComplete","fetch","json","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport './Todo.css';\r\nimport axios from 'axios';\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n    const newTodos = [todo, ...todos];\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n\r\n  };\r\n\r\n // updating data in json and displaying\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    axios.put('http://localhost:5000/todos/' + todoId, {\r\n      \"id\": todoId,\r\n      \"text\":newValue.text\r\n    })\r\n      .then(res => {\r\n        console.log(newValue.text);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n    console.log(newValue)\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  //To delete data from json file\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n    setTodos(removedArr);\r\n    axios.delete(\"http://localhost:5000/todos/\" + id).then(res => {\r\n      console.log(\"Bucket list deleted!!\");\r\n      alert(\"Bucket list Deleted!!\")\r\n    }).catch(error => {\r\n      console.log(error);\r\n    })\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n  \r\n  //Reading json data\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/todos').then(res => {\r\n      return res.json();\r\n    })\r\n      .then(data=> {\r\n        console.log(data);\r\n        setTodos(data);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n      <div className =\"todolist\">\r\n      <h1 className='h1-todo'>What's the Plan for Today?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n        />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n\n    if (errors) {\n      console.log(\"Invalid Details\");\n    } else if (errors == null) {\n      console.log(\"Invalid!!\");\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n      fetch(\"http://localhost:5000/signupUsers\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: values.email,\n          username: values.username,\n          password: values.password\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"AmSPX59tckCBP+9I0Y9yGr+xCuo=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/Bindu/OneDrive/Desktop/FSDproject/FSD2_Group24/fsd2-group24/src/components/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","username","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","Object","keys","length","fetch","method","body","JSON","stringify","headers"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,SAAS,EAAE;AAJwB,GAAD,CAApC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAb,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACY,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,SAAS,CAACR,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAS,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAIH,MAAJ,EAAY;AACVW,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAFD,MAGK,IAAGZ,MAAM,IAAI,IAAb,EAAkB;AACvBW,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACA,GAXD;;AAaAtB,EAAAA,SAAS,CACP,MAAM;AACJ,QAAIuB,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCb,YAAxC,EAAsD;AACpDV,MAAAA,QAAQ;AACRwB,MAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBvB,UAAAA,KAAK,EAAEH,MAAM,CAACG,KADK;AAEnBD,UAAAA,QAAQ,EAAEF,MAAM,CAACE,QAFE;AAGnBE,UAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAHE,SAAf,CAFmC;AAOzCuB,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAPgC,OAAtC,CAAL;AAWD;AACF,GAhBM,EAiBP,CAACrB,MAAD,CAjBO,CAAT;AAoBA,SAAO;AAAEI,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8Bf,IAAAA,MAA9B;AAAsCM,IAAAA;AAAtC,GAAP;AACD,CApDD;;GAAMT,O;;AAsDN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n    if (errors) {\r\n      console.log(\"Invalid Details\")\r\n    }\r\n    else if(errors == null){\r\n    console.log(\"Invalid!!\")\r\n  }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n        callback();\r\n        fetch(\"http://localhost:5000/signupUsers\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: values.email,\r\n            username: values.username,\r\n            password: values.password,\r\n          }),\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [errors]\r\n  );\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}
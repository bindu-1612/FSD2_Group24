{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bindu\\\\OneDrive\\\\Desktop\\\\FSDproject\\\\FSD2_Group24\\\\fsd2-group24\\\\src\\\\components\\\\maps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nconst map_img = {\n  width: '400px',\n  height: '300px',\n  textAlign: 'center'\n};\nexport function MapContainer(props) {\n  _s();\n\n  const [showingInfoWindow, setShowingInfoWindow] = useState(true);\n  const [activeMarker, setActiveMarker] = useState({});\n  const [selectedPlace, setSelectedPlace] = useState({});\n  const [maps, setMaps] = useState([]);\n  const [item, setItem] = useState(null); //on clicking the marker infowindow will be shown\n\n  const onMarkerClick = (props, marker, item, e) => {\n    setSelectedPlace(props);\n    setActiveMarker(marker);\n    setShowingInfoWindow(true);\n    setItem(item);\n  }; //on clicking the map setting up the markers\n\n\n  const onMapClicked = props => {\n    if (showingInfoWindow) {\n      setActiveMarker();\n      setShowingInfoWindow(true);\n      setItem(item);\n    }\n  }; //fetching maps from the json server\n\n\n  useEffect(() => {\n    fetch('http://localhost:5000/Vizagmaps').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setMaps(data);\n      console.log(maps);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    //Map imported from google given initialCenter and onClick all the markers will be appeared\n    _jsxDEV(Map, {\n      google: props.google,\n      onClick: onMapClicked,\n      defaultZoom: 12,\n      initialCenter: {\n        lng: 83.323685,\n        lat: 17.714294\n      },\n      children: [maps.map(item => /*#__PURE__*/_jsxDEV(Marker, {\n        onMouseover: onMarkerClick,\n        position: {\n          lng: item.lng,\n          lat: item.lat\n        },\n        name: item.name,\n        content: item.image\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(InfoWindow, {\n        marker: activeMarker,\n        visible: showingInfoWindow,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: map_img,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedPlace.content,\n            width: \"512px\",\n            height: \"250px;\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  );\n} //using the google maps api\n\n_s(MapContainer, \"uW/Uxz4nqVf0mWz2jI+9Iyz6SKQ=\");\n\n_c = MapContainer;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyD1hrUHm5CzRtbuAkoBvCgAGjhEv-Xt4Vc'\n})(MapContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/Users/Bindu/OneDrive/Desktop/FSDproject/FSD2_Group24/fsd2-group24/src/components/maps.js"],"names":["React","useState","useEffect","Component","Map","Marker","GoogleApiWrapper","InfoWindow","mapStyles","width","height","map_img","textAlign","MapContainer","props","showingInfoWindow","setShowingInfoWindow","activeMarker","setActiveMarker","selectedPlace","setSelectedPlace","maps","setMaps","item","setItem","onMarkerClick","marker","e","onMapClicked","fetch","then","res","json","data","console","log","google","lng","lat","map","name","image","id","content","apiKey"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nconst map_img = {\r\n  width: '400px',\r\n  height: '300px',\r\n  textAlign: 'center',\r\n\r\n}\r\n\r\n\r\nexport function MapContainer(props) {\r\n\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(true);\r\n  const [activeMarker, setActiveMarker] = useState({});\r\n  const [selectedPlace, setSelectedPlace] = useState({});\r\n  const [maps, setMaps] = useState([])\r\n  const [item, setItem] = useState(null);\r\n  //on clicking the marker infowindow will be shown\r\n  const onMarkerClick = (props, marker,item, e) => {\r\n    setSelectedPlace(props);\r\n    setActiveMarker(marker);\r\n    setShowingInfoWindow(true);\r\n    setItem(item);\r\n  }\r\n//on clicking the map setting up the markers\r\n  const onMapClicked = (props) => {\r\n    if (showingInfoWindow) {\r\n      setActiveMarker();\r\n      setShowingInfoWindow(true);\r\n      setItem(item)\r\n    }\r\n  };\r\n  //fetching maps from the json server\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/Vizagmaps').then(res => {\r\n      return res.json();\r\n    })\r\n      .then(data => {\r\n        console.log(data);\r\n        setMaps(data);\r\n        console.log(maps);\r\n      })\r\n  }, []);\r\n\r\n\r\n  return (\r\n    //Map imported from google given initialCenter and onClick all the markers will be appeared\r\n    <Map google={props.google}\r\n      onClick={onMapClicked}\r\n      defaultZoom={12}\r\n      initialCenter={{\r\n        lng: 83.323685,\r\n        lat: 17.714294\r\n      }}>\r\n      {/* all the items in the json list is iterated and returned to display using map function */}\r\n      {maps.map(item => (\r\n        <Marker\r\n          onMouseover={onMarkerClick}\r\n          position={{\r\n            lng: item.lng,\r\n            lat: item.lat\r\n          }}\r\n          name={item.name}\r\n          key={item.id}\r\n          content={item.image}\r\n\r\n        />\r\n      ))}\r\n      {/* InfoWindow is imported to show the image and name of the location */}\r\n      <InfoWindow\r\n        marker={activeMarker}\r\n        visible={showingInfoWindow}>\r\n        <div style={map_img}>\r\n          <img src={selectedPlace.content} width=\"512px\" height=\"250px;\" />\r\n          <h3>{selectedPlace.name}</h3>\r\n        </div>\r\n      </InfoWindow>\r\n    </Map>\r\n  );\r\n}\r\n//using the google maps api\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyD1hrUHm5CzRtbuAkoBvCgAGjhEv-Xt4Vc'\r\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"C:/Users/Bindu/OneDrive/Desktop/FSDproject/FSD2_Group24/fsd2-group24/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';// import { TiArrowMaximiseOutline } from 'react-icons/ti';\nimport'./Todo.css';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(props){var _useState=useState(props.edit?props.edit.value:''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var inputRef=useRef(null);useEffect(function(){inputRef.current.focus();});var handleChange=function handleChange(e){setInput(e.target.value);};// to add bucketlist into json api\nvar handleSubmit=function handleSubmit(e){e.preventDefault();var todolist={'id':Math.floor(Math.random()*10000),'text':input};axios.post('http://localhost:5000/todos',todolist).then(function(res){return console.log(\"Added bucket list!!\");});props.onSubmit(todolist);setInput('');};var handleSubmitUpdate=function handleSubmitUpdate(e){e.preventDefault();props.onSubmit({'text':input});setInput('');};return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,className:\"todo-form\",children:props.edit?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Update your list\",value:input,onChange:handleChange,name:\"text\",ref:inputRef,className:\"todo-input edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmitUpdate,className:\"todo-button edit\",children:\"Update\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Add a bucket list\",value:input,onChange:handleChange,name:\"text\",className:\"todo-input\",ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"todo-button\",children:\"Add\"})]})});}export default TodoForm;","map":{"version":3,"sources":["C:/Users/Bindu/OneDrive/Desktop/FSDproject/FSD2_Group24/fsd2-group24/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","axios","TodoForm","props","edit","value","input","setInput","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","todolist","Math","floor","random","post","then","res","console","log","onSubmit","handleSubmitUpdate"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA;AACA,MAAO,YAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,6IACA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,cAA0BL,QAAQ,CAACK,KAAK,CAACC,IAAN,CAAaD,KAAK,CAACC,IAAN,CAAWC,KAAxB,CAAgC,EAAjC,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,QAAQ,CAAGR,MAAM,CAAC,IAAD,CAAvB,CAEAD,SAAS,CAAC,UAAM,CACdS,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GACD,CAFQ,CAAT,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR,CACD,CAFD,CAIA;AACA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,CAAC,CAAI,CACxBA,CAAC,CAACG,cAAF,GACA,GAAIC,CAAAA,QAAQ,CAAG,CACb,KAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAA3B,CADO,CAEb,OAAQb,KAFK,CAAf,CAIAL,KAAK,CAACmB,IAAN,CAAW,6BAAX,CAAyCJ,QAAzC,EAAmDK,IAAnD,CAAwD,SAAAC,GAAG,QAAGC,CAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAH,EAA3D,EACArB,KAAK,CAACsB,QAAN,CAAeT,QAAf,EACAT,QAAQ,CAAC,EAAD,CAAR,CACD,CATD,CAUA,GAAMmB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAd,CAAC,CAAI,CAC9BA,CAAC,CAACG,cAAF,GACAZ,KAAK,CAACsB,QAAN,CAAe,CAAE,OAAQnB,KAAV,CAAf,EACAC,QAAQ,CAAC,EAAD,CAAR,CACD,CAJD,CAKA,mBACE,aAAM,QAAQ,CAAEO,YAAhB,CAA8B,SAAS,CAAC,WAAxC,UACGX,KAAK,CAACC,IAAN,cACC,wCACE,cACE,WAAW,CAAC,kBADd,CAEE,KAAK,CAAEE,KAFT,CAGE,QAAQ,CAAEK,YAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,GAAG,CAAEH,QALP,CAME,SAAS,CAAC,iBANZ,EADF,cASE,eAAQ,OAAO,CAAEkB,kBAAjB,CAAqC,SAAS,CAAC,kBAA/C,oBATF,GADD,cAeC,wCACE,cACE,WAAW,CAAC,mBADd,CAEE,KAAK,CAAEpB,KAFT,CAGE,QAAQ,CAAEK,YAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,SAAS,CAAC,YALZ,CAME,GAAG,CAAEH,QANP,EADF,cASE,eAAQ,OAAO,CAAEM,YAAjB,CAA+B,SAAS,CAAC,aAAzC,iBATF,GAhBJ,EADF,CAiCD,CAED,cAAeZ,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n// import { TiArrowMaximiseOutline } from 'react-icons/ti';\r\nimport './Todo.css';\r\nimport axios from 'axios'\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  // to add bucketlist into json api\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    var todolist = {\r\n      'id': Math.floor(Math.random() * 10000),\r\n      'text': input\r\n    };\r\n    axios.post('http://localhost:5000/todos',todolist).then(res=> console.log(\"Added bucket list!!\"))\r\n    props.onSubmit(todolist);\r\n    setInput('');\r\n  };\r\n  const handleSubmitUpdate = e => {\r\n    e.preventDefault();\r\n    props.onSubmit({ 'text': input });\r\n    setInput('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your list'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmitUpdate} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a bucket list'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}